var $kaner_jquery_main = jQuery.noConflict(true);var kaner_stored_options = {        _allow_stream_av: true,        _allow_stream_v: true,        _allow_stream_a: true,        _allow_format_mp4: true,        _allow_format_flv: true,        _allow_format_3gp: true,        _allow_format_webm: true,        _allow_format_m4a: true,        _allow_format_ogg: true};function onErrorForStorage(e) {        console.error(e);};function restoreOptions(storedSettings) {        if (!storedSettings.kaner_stored_options) {                browser.storage.local.set({kaner_stored_options});        }        kaner_stored_options._allow_stream_av = storedSettings.kaner_stored_options._allow_stream_av;        kaner_stored_options._allow_stream_v = storedSettings.kaner_stored_options._allow_stream_v;        kaner_stored_options._allow_stream_a = storedSettings.kaner_stored_options._allow_stream_a;        kaner_stored_options._allow_format_mp4 = storedSettings.kaner_stored_options._allow_format_mp4;        kaner_stored_options._allow_format_flv = storedSettings.kaner_stored_options._allow_format_flv;        kaner_stored_options._allow_format_3gp = storedSettings.kaner_stored_options._allow_format_3gp;        kaner_stored_options._allow_format_webm = storedSettings.kaner_stored_options._allow_format_webm;        kaner_stored_options._allow_format_m4a = storedSettings.kaner_stored_options._allow_format_m4a;        kaner_stored_options._allow_format_ogg = storedSettings.kaner_stored_options._allow_format_ogg;};var gettingStoredSettings = browser.storage.local.get();gettingStoredSettings.then(restoreOptions, onErrorForStorage);var youtube_stream_codes = new Object();                               youtube_stream_codes[5] = {'container':'flv','content':'av','resolution':'240p'};youtube_stream_codes[6] = {'container':'flv','content':'av','resolution':'270p'};youtube_stream_codes[17] = {'container':'3gp','content':'av','resolution':'144p'};youtube_stream_codes[18] = {'container':'mp4','content':'av','resolution':'360p'};youtube_stream_codes[22] = {'container':'mp4','content':'av','resolution':'720p'};youtube_stream_codes[34] = {'container':'flv','content':'av','resolution':'360p'};youtube_stream_codes[35] = {'container':'flv','content':'av','resolution':'480p'};youtube_stream_codes[36] = {'container':'3gp','content':'av','resolution':'180p'};youtube_stream_codes[37] = {'container':'mp4','content':'av','resolution':'1080p'};youtube_stream_codes[38] = {'container':'mp4','content':'av','resolution':'3072p'};youtube_stream_codes[43] = {'container':'webm','content':'av','resolution':'360p'};youtube_stream_codes[44] = {'container':'webm','content':'av','resolution':'480p'};youtube_stream_codes[45] = {'container':'webm','content':'av','resolution':'720p'};youtube_stream_codes[46] = {'container':'webm','content':'av','resolution':'1080p'};youtube_stream_codes[82] = {'container':'mp4','content':'av','resolution':'360p'};  youtube_stream_codes[83] = {'container':'mp4','content':'av','resolution':'480p'};  youtube_stream_codes[84] = {'container':'mp4','content':'av','resolution':'720p'};  youtube_stream_codes[85] = {'container':'mp4','content':'av','resolution':'1080p'}; youtube_stream_codes[92] = {'container':'hls','content':'av','resolution':'240p'};  youtube_stream_codes[93] = {'container':'hls','content':'av','resolution':'360p'};  youtube_stream_codes[94] = {'container':'hls','content':'av','resolution':'480p'};  youtube_stream_codes[95] = {'container':'hls','content':'av','resolution':'720p'};  youtube_stream_codes[96] = {'container':'hls','content':'av','resolution':'1080p'};youtube_stream_codes[100] = {'container':'webm','content':'av','resolution':'360p'};youtube_stream_codes[101] = {'container':'webm','content':'av','resolution':'480p'};youtube_stream_codes[102] = {'container':'webm','content':'av','resolution':'720p'};youtube_stream_codes[132] = {'container':'hls','content':'av','resolution':'240p'};youtube_stream_codes[133] = {'container':'mp4','content':'v','resolution':'240p'};youtube_stream_codes[134] = {'container':'mp4','content':'v','resolution':'360p'};youtube_stream_codes[135] = {'container':'mp4','content':'v','resolution':'480p'};youtube_stream_codes[136] = {'container':'mp4','content':'v','resolution':'720p'};youtube_stream_codes[137] = {'container':'mp4','content':'v','resolution':'1080p'};youtube_stream_codes[138] = {'container':'mp4','content':'v','resolution':'2160p60'};youtube_stream_codes[139] = {'container':'m4a','content':'a','resolution':'48k'};youtube_stream_codes[140] = {'container':'m4a','content':'a','resolution':'128k'};youtube_stream_codes[141] = {'container':'m4a','content':'a','resolution':'256k'};youtube_stream_codes[151] = {'container':'hls','content':'av','resolution':'72p'};youtube_stream_codes[160] = {'container':'mp4','content':'v','resolution':'144p'};youtube_stream_codes[167] = {'container':'webm','content':'v','resolution':'360p'};youtube_stream_codes[168] = {'container':'webm','content':'v','resolution':'480p'};youtube_stream_codes[169] = {'container':'webm','content':'v','resolution':'1080p'};youtube_stream_codes[171] = {'container':'ogg','content':'a','resolution':'128k'};youtube_stream_codes[218] = {'container':'webm','content':'v','resolution':'480p'};youtube_stream_codes[219] = {'container':'webm','content':'v','resolution':'144p'};youtube_stream_codes[242] = {'container':'webm','content':'v','resolution':'240p'};youtube_stream_codes[243] = {'container':'webm','content':'v','resolution':'360p'};youtube_stream_codes[244] = {'container':'webm','content':'v','resolution':'480p'};youtube_stream_codes[245] = {'container':'webm','content':'v','resolution':'480p'};youtube_stream_codes[246] = {'container':'webm','content':'v','resolution':'480p'};youtube_stream_codes[247] = {'container':'webm','content':'v','resolution':'720p'};youtube_stream_codes[248] = {'container':'webm','content':'v','resolution':'1080p'};youtube_stream_codes[249] = {'container':'ogg','content':'a','resolution':'50k'};youtube_stream_codes[250] = {'container':'ogg','content':'a','resolution':'70k'};youtube_stream_codes[251] = {'container':'ogg','content':'a','resolution':'160k'};youtube_stream_codes[264] = {'container':'mp4','content':'v','resolution':'1440p'};youtube_stream_codes[266] = {'container':'mp4','content':'v','resolution':'2160p60'};youtube_stream_codes[271] = {'container':'webm','content':'v','resolution':'1440p'};youtube_stream_codes[272] = {'container':'webm','content':'v','resolution':'4320p'};youtube_stream_codes[278] = {'container':'webm','content':'v','resolution':'144p'};youtube_stream_codes[298] = {'container':'mp4','content':'v','resolution':'720p60'};youtube_stream_codes[299] = {'container':'mp4','content':'v','resolution':'1080p60'};youtube_stream_codes[302] = {'container':'webm','content':'v','resolution':'720p60'};youtube_stream_codes[303] = {'container':'webm','content':'v','resolution':'1080p60'};youtube_stream_codes[308] = {'container':'webm','content':'v','resolution':'1440p60'};youtube_stream_codes[313] = {'container':'webm','content':'v','resolution':'2160p'};youtube_stream_codes[315] = {'container':'webm','content':'v','resolution':'2160p60'};youtube_stream_codes[330] = {'container':'webm','content':'v','resolution':'144p60'};youtube_stream_codes[331] = {'container':'webm','content':'v','resolution':'240p60'};youtube_stream_codes[332] = {'container':'webm','content':'v','resolution':'360p60'};youtube_stream_codes[333] = {'container':'webm','content':'v','resolution':'480p60'};youtube_stream_codes[334] = {'container':'webm','content':'v','resolution':'720p60'};youtube_stream_codes[335] = {'container':'webm','content':'v','resolution':'1080p60'};youtube_stream_codes[336] = {'container':'webm','content':'v','resolution':'1440p60'};youtube_stream_codes[337] = {'container':'webm','content':'v','resolution':'2160p60'};var __kaner_youtube_encryption_function = "";function cleanDownloadString(name) {        name = name.replace(/&quot;/g, "");        name = name.replace(/&amp;/g, "-");        name = name.replace(/:/g , "_");        name = name.replace(/&/g , " ");        name = name.replace(/'/g , " ");        name = name.replace(/"/g , " ");        name = name.replace(/\?/g, "");        name = name.replace(/\|/g , " ");        name = name.replace(/\*/g , "_");        name = name.replace(/  +/g, ' ');        return name;};function checkPlayerBase() {        var scripts = document.getElementsByTagName('script');        for(i = 0 ; i < scripts.length ; i++) {                var scriptSrc = scripts[i].src;                if (scriptSrc.indexOf('player') != -1 && scriptSrc.indexOf('base.js') != -1) {                        var xhttp = new XMLHttpRequest();                        xhttp.onreadystatechange = function() {                                if (this.readyState == 4) {                                        var jsCode = this.responseText;                                          var encryption_func = jsCode.match(/.*=function[(]a[)][{]a=a\.split[(]\"\"[)][;].*/g);                                        if (encryption_func) {                                                var temp_encryption_func = encryption_func[0];                                                if (encryption_func.length == 2 && encryption_func[1][2] == '=') {                                                        temp_encryption_func = encryption_func[1];                                                }                                                __kaner_youtube_encryption_function = temp_encryption_func.substring(0 , 2);                                                eval (temp_encryption_func);                                                var component_function_name = temp_encryption_func.substring(29 , 31);                                                var regex1 = new RegExp('(var '+ component_function_name +'=(.|\n)*?[}][}][;])', 'm');                                                var regex1_match = jsCode.match(regex1);                                                if (regex1_match != undefined) {                                                        eval (regex1_match[0]);                                                }                                        }                                        checkStreamMap();                                }                        };                        xhttp.open("GET", scriptSrc, true);                        xhttp.overrideMimeType('text/plain');                        xhttp.send();                }        }};function get_filesize(url, callback) {        var xhr = new XMLHttpRequest();        xhr.open("HEAD", url, false);        xhr.onreadystatechange = function() {                if (this.readyState == this.DONE) {                        callback(parseInt(xhr.getResponseHeader("Content-Length")));                }        };        xhr.send();};var videos = new Array();function checkStreamMap() {        var xhttp = new XMLHttpRequest();        xhttp.onreadystatechange = function() {                if (this.readyState == 4) {                        var scriptCode = this.responseText;                        var regex = /\\"/gi;                        var scriptCode = scriptCode.replace(regex, '"');                        var title_name="";                        if (scriptCode.indexOf('"title"') != -1) {                                var spattern = '"title":"';                                var spos = scriptCode.indexOf(spattern);                                if (spos != -1) {                                        spos = spos+spattern.length;                                        var epos = scriptCode.indexOf('",', spos);                                        if (epos != -1) {                                                var streamMapStr = scriptCode.substr(spos, epos-spos);                                                title_name = streamMapStr.replace (/\||\'|\"|\\u0026|:|\*|\?|\\|\/|<|>/g , '');                                        }                                }                        }                        var title = "";                        videos = [];                        var spatterns = ['\"formats\":' , '\"adaptiveFormats\":'];                        for (var i = 0 ; i < spatterns.length ; i++) {                                if (scriptCode.indexOf(spatterns[i]) != -1) {                                        var spattern = spatterns[i];                                        var spos = scriptCode.indexOf(spattern);                                        if (spos != -1) {                                                spos = spos + spattern.length;                                                var epos = scriptCode.indexOf(']' , spos);                                                if (epos != -1) {                                                        var streamGroupsStr = 'var streamGroups = ' + scriptCode.substr(spos, epos - spos);                                                        streamGroupsStr = streamGroupsStr + '];';                                                        streamGroupsStr = streamGroupsStr.replace(/\\\\/g, '\\');streamGroupsStr = streamGroupsStr.replace(/codecs="[a-zA-Z0-9., ]*"/g, '');                                                        eval(streamGroupsStr);                                                        for(streams_counter = 0 ; streams_counter < streamGroups.length ; streams_counter++) {                                                                var stream = streamGroups[streams_counter];                                                                var video = new Array();                                                                if (typeof title == 'undefined') {                                                                        title = 'Download';                                                                }                                                                video['title_name'] = cleanDownloadString(title_name);                                                                video['title'] = cleanDownloadString(title);                                                                var itag = stream.itag;                                                                if (itag >= 5 && itag <= 337) {                                                                        var stream_code = youtube_stream_codes[itag];                                                                        if (kaner_stored_options._allow_stream_av == false && stream_code.content == 'av') continue;                                                                        if (kaner_stored_options._allow_stream_v == false && stream_code.content == 'v') continue;                                                                        if (kaner_stored_options._allow_stream_a == false && stream_code.content == 'a') continue;                                                                        if (kaner_stored_options._allow_format_mp4 == false && stream_code.container == 'mp4') continue;                                                                        if (kaner_stored_options._allow_format_flv == false && stream_code.container == 'flv') continue;                                                                        if (kaner_stored_options._allow_format_3gp == false && stream_code.container == '3gp') continue;                                                                        if (kaner_stored_options._allow_format_webm == false && stream_code.container == 'webm') continue;                                                                        if (kaner_stored_options._allow_format_m4a == false && stream_code.container == 'm4a') continue;                                                                        if (kaner_stored_options._allow_format_ogg == false && stream_code.container == 'ogg') continue;                                                                        if (stream_code == 'undefined') {                                                                                console.log ('itag not found :' + itag);                                                                        } else {                                                                                if (stream_code.content == 'av') {                                                                                        video['title_name'] = video['title_name'] + '_' + stream_code.resolution + '.' + stream_code.container;                                                                                        video['type'] = 'Audio-Video - Resolution:' + stream_code.resolution.toUpperCase() + ' Format:' + stream_code.container.toUpperCase();                                                                                } else if (stream_code.content == 'v') {                                                                                        video['title_name'] = video['title_name'] + '_v_' + stream_code.resolution + '.' + stream_code.container;                                                                                        video['type'] = 'Video-Only - Resolution:' + stream_code.resolution.toUpperCase() + ' Format:' + stream_code.container.toUpperCase();                                                                                } else if (stream_code.content == 'a') {                                                                                        video['title_name'] = video['title_name'] + '_a_' + stream_code.resolution + '.' + stream_code.container;                                                                                        video['type'] = 'Audio-Only - Resolution:' + stream_code.resolution.toUpperCase() + ' Format:' + stream_code.container.toUpperCase();                                                                                }                                                                                video['itag'] = itag;                                                                                if (stream.url != undefined) {                                                                                        video['url'] = unescape(unescape(stream.url)).replace(/\\\//g, '/').replace(/\\u0026/g, '&');                                                                                } else {                                                                                        var cipher = "";                                                                                        if (stream.cipher != undefined) {                                                                                                cipher = stream.cipher;                                                                                        } else if (stream.signatureCipher != undefined) {                                                                                                cipher = stream.signatureCipher;                                                                                        }                                                                                        var sub_ciphers = cipher.split('&');                                                                                        var url = "";                                                                                        var signature = "";                                                                                        for (sub_ciphers_index = 0 ; sub_ciphers_index < sub_ciphers.length ; sub_ciphers_index++) {                                                                                                sub_cipher = sub_ciphers[sub_ciphers_index];                                                                                                if (sub_cipher[0] == 'u') {                                                                                                        url = sub_cipher.substr(4);                                                                                                        url = unescape(unescape(url)).replace(/\\\//g, '/').replace(/\\u0026/g, '&');                                                                                                } else if (sub_cipher[0] == 's' && sub_cipher[1] == '=') {                                                                                                        signature = sub_cipher.substr(2);                                                                                                }                                                                                        }                                                                                        var signature_1_string = 'var signature_1 = encodeURIComponent(' + __kaner_youtube_encryption_function + '(decodeURIComponent(signature)));';                                                                                        eval(signature_1_string);                                                                                        url = url + '&sig=' + signature_1;                                                                                        video['url'] = url;                                                                                }                                                                                video['size'] = 'NA';                                                                                get_filesize(video['url'], function(size) {                                                                                        if (size > 1000000000) {                                                                                                video['size'] = (size/1000000000).toPrecision(3) + ' GB';                                                                                        } else if (size > 1000000) {                                                                                                video['size'] = (size/1000000).toPrecision(3) + ' MB';                                                                                        } else if (size > 1000) {                                                                                                video['size'] = (size/1000).toPrecision(3) + ' KB';                                                                                        } else {                                                                                                video['size'] = size + ' B';                                                                                        }                                                                                });                                                                                videos.push(video);                                                                        }                                                                }                                                        }                                                }                                        }                                        checkDownloadButton();                                }                        }                }        };        xhttp.open("GET", location.href, true);        xhttp.overrideMimeType('text/plain');        xhttp.send();};function checkDownloadButton() {        var button = $kaner_jquery_main('#youtube-download-button');        if (!button.length) {                setTimeout(checkDownloadButton, 2000);        }        chrome.runtime.sendMessage({'action': 'getDOMChanges'});};checkPlayerBase();function streammapHandleMessage(message) {        if (message.action == 'applyDOMChanges') {                if (message.type == 'change') {                        var element = $kaner_jquery_main(message.selector);                        if (element) {                                element.html(message.content);                        }                } else if (message.type == 'append') {                        var element = $kaner_jquery_main(message.selector);                        var existing = $kaner_jquery_main('#'+message.content_id).length;                        if (element && !existing) {                                element.append(message.content);                        }                } else if (message.type == 'remove') {                        var element = $kaner_jquery_main(message.selector);                        if (element) {                                element.remove();                        }                }        } else if (message.action == 'applyDOMActions') {                var button = $kaner_jquery_main('#youtube-download-button');                button.unbind('click');                button.text(chrome.i18n.getMessage("downloadButtonLabel"));                button.click(function(event) {                        var title = document.title.replace(' - YouTube', '').trim();                        $kaner_jquery_main('.kaner_jquery_main-ul li').slice(1).remove();                        for(var i = 0 ; i < videos.length ; i++) {                                var downloadItem = $kaner_jquery_main('#download-item-0');                                if (i > 0) {                                        if (!$kaner_jquery_main('#download-item-'+i).length) {                                                downloadItem = $kaner_jquery_main('#download-item-0').clone();                                                downloadItem.attr('id', 'download-item-'+i);                                                downloadItem.appendTo($kaner_jquery_main('#download-item-0').parent());                                        }                                }                                var downloadButton = $kaner_jquery_main('#download-item-'+i+' button');                                var downloadTitle = $kaner_jquery_main('#download-item-'+i+' button span');                                downloadButton.attr('download-url', videos[i]['url']);                                downloadButton.attr('download-title_name', videos[i]['title_name']);                                downloadTitle.text(' ' + videos[i]['type'] + ' Size:[' + videos[i]['size'] + ']');                                downloadButton.off();                                downloadButton.unbind('click');                                downloadButton.click(function(event) {                                        chrome.runtime.sendMessage({'action': 'doDownload', 'url': $kaner_jquery_main(this).attr('download-url'), 'title_name': $kaner_jquery_main(this).attr('download-title_name')});                                });                        }                        var buttonOffset = $kaner_jquery_main('#youtube-download-button').offset();                        var panelTop = buttonOffset.top + $kaner_jquery_main('#youtube-download-button').height();                        var panelLeft = buttonOffset.left;                        $kaner_jquery_main('#youtube-download-panel').css({top: panelTop, left: panelLeft});                        $kaner_jquery_main('#youtube-download-panel').toggle();                });                $kaner_jquery_main(document).click(function(event) {                        if (event.target.getAttribute('id') != 'youtube-download-button') {                                $kaner_jquery_main('#youtube-download-panel').hide();                        }                });        }};chrome.runtime.onMessage.addListener(streammapHandleMessage);function scrollToDownloadPanel() {        if ($kaner_jquery_main('#youtube-download-button').length) {                $kaner_jquery_main('#youtube-download-button').click();                $kaner_jquery_main('html, body').animate({                        scrollTop: $kaner_jquery_main("#youtube-download-button").offset().top-50                }, 1000);        } else {                setTimeout(function() { scrollToDownloadPanel(); }, 1000);        }};$kaner_jquery_main(document).ready(function() {        if (location.href.indexOf('feature=kaner_jquery_main') != -1) {                scrollToDownloadPanel();        }});var oldUrl = location.href;function checkReload() {        if (oldUrl != location.href) {                var gettingStoredSettings = browser.storage.local.get();                gettingStoredSettings.then(restoreOptions, onErrorForStorage);                videos = [];                $kaner_jquery_main('#youtube-download-button').remove();                checkPlayerBase();                oldUrl = location.href;        }};var observer = new MutationObserver(function(mutations) {        mutations.forEach(function(mutation) {                checkReload();        });});var config = {attributes: true, childList: true, characterData: true, subtree: true};observer.observe(document.body, config);
